/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/wmouMaCO9ek
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import { Dispatch, SetStateAction, useState } from "react";
import { NFTContract } from "@/types/nft";
import { fetchGraphQl } from "@mintbase-js/data";
import { Progress } from "../ChallengeCreator";
import { Network } from "@mintbase-js/sdk";

export default function NFTForm({
  nft,
  setNft,
  network,
}: {
  nft: NFTContract | undefined;
  setNft: Dispatch<SetStateAction<NFTContract | undefined>>;
  network: Network;
}) {
  const [nftId, setNftId] = useState(nft?.id || "");

  const query = `
  query NftContract($_eq: String = "") {
    nft_contracts(where: {id: {_eq: $_eq}}) {
      category
      created_at
      id
      icon
      name
      owner_id
      symbol
    }
  }
`;

  async function fetchNftContract(id: string) {
    const res: {
      data?: {
        nft_contracts: Array<NFTContract>;
      };
    } = await fetchGraphQl({ query, variables: { _eq: id }, network });
    console.log(network);
    if (res.data?.nft_contracts[0] != null) {
      setNft(res.data.nft_contracts[0]);
    }
  }

  return (
    <div className="mx-auto max-w-md space-y-6">
      <div className="space-y-2 text-left">
        <h2 className="text-xl font-semibold">Choose your reward NFT</h2>
        <p className="text-gray-500 dark:text-gray-400">
          Enter the ID of the NFT you would like to use as a reward for completing the challenge.
        </p>
      </div>
      <div className="space-y-6">
        <div>
          <label htmlFor="nft-id">NFT ID</label>
          <div className="grid gap-4">
            <div className="space-y-2">
              <Input
                value={nftId}
                onChange={(e) => setNftId(e.target.value)}
                id="nft-id"
                placeholder="Enter the NFT ID"
              />
            </div>
          </div>
        </div>
        <div className="flex justify-between">
          <Button onClick={async () => await fetchNftContract(nftId)}>Next</Button>
        </div>
      </div>
    </div>
  );
}
