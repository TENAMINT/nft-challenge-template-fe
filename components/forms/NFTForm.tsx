/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/wmouMaCO9ek
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Button } from "@/components/ui/button";
import { SelectValue, SelectTrigger, SelectItem, SelectContent, Select } from "@/components/ui/select";
import { Checkbox } from "@/components/ui/checkbox";
import { tokenById } from "@mintbase-js/data";
import { Dispatch, SetStateAction, useState } from "react";
import { NFTContract } from "@/types/nft";

export default function NFTForm({ setNft }: { setNft: Dispatch<SetStateAction<NFTContract | undefined>> }) {
  const [nftId, setNftId] = useState("");

  const operationsDoc = `
  query NftContract($_eq: String = "") {
    nft_contracts(where: {id: {_eq: $_eq}}) {
      category
      created_at
      id
      icon
      name
      owner_id
      symbol
    }
  }
`;

  async function fetchNftContract(id: string) {
    const { errors, data } = await fetchGraphQL(operationsDoc, "NftContract", { _eq: id });
    if (errors) {
      console.error(errors);
    }
    setNft(data.nft_contracts[0]);
  }

  return (
    <div className="mx-auto max-w-md space-y-6">
      <div className="space-y-2 text-center">
        <h1 className="text-3xl font-bold">Create Your NFT Challenge</h1>
        <p className="text-gray-500 dark:text-gray-400">
          Unleash your creativity and captivate your audience with a unique NFT challenge.
        </p>
      </div>
      <div className="space-y-6">
        <div>
          <label htmlFor="nft-id">NFT ID</label>
          <div className="grid gap-4">
            <div className="space-y-2">
              <Input
                value={nftId}
                onChange={(e) => setNftId(e.target.value)}
                id="nft-id"
                placeholder="Enter the NFT ID"
              />
            </div>
          </div>
        </div>
        <div className="flex justify-between">
          <Button onClick={async () => await fetchNftContract(nftId)} variant="outline">
            Get Started
          </Button>
        </div>
      </div>
    </div>
  );
}
